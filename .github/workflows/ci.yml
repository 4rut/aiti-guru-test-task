name: Tests

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: Run tests (pytest)
    runs-on: self-hosted
    timeout-minutes: 20

    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: shop
          POSTGRES_USER: shop
          POSTGRES_PASSWORD: shop
        options: >-
          --health-cmd="pg_isready -U shop -d shop"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

    defaults:
      run:
        working-directory: app

    env:
      PYTHONPATH: ${{ github.workspace }}/app
      TEST_DATABASE_URL: postgresql+psycopg2://shop:shop@localhost:5432/shop

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('app/requirements.txt', 'app/requirements-dev.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt

      - name: Run pytest (with coverage)
        run: |
          pytest -q --maxfail=1 --disable-warnings --cov=. --cov-report=xml

      - name: Upload coverage (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: app/coverage.xml
        if: always()

  docker-build-push:
    name: Build Docker image
    if: github.ref == 'refs/heads/main'
    needs: [tests]
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    env:
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/aiti-guru-test-task-api

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: ./app
          push: false
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
